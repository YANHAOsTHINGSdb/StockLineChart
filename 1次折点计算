1次折点计算

2次折点计算
入口：折点List1
出口：折点List2

	折点
	|----int 日時; // YYYYMMDD
	|----String 位置; //SHLE
	|----int 高低; //(高。低)
	|----String 价格;
	|----int index;


    平台
    |----int i類型;	// (M，头肩，收缩三角形)
    |----int 高低; //(高。低)
	|----折点 開始折点; 
	|----折点 結束折点;  
	|----折点 最高价格折点; 
	|----折点 最低价格折点;
    
	收缩三角形图形 extends 平台
	|----折点 外角高价折点;
	|----折点 外角低价折点;
	|----折点 内角高价折点;
	|----折点 内角低价折点;

	M形图形 extends 平台
	|----折点 左;
	|----折点 右;	

	头肩形图形 extends 平台
	|----折点 左;
	|----折点 右;
	|----折点 中;




排除干扰计算【计算高点、高台】
--------------------------------------
入口：折点List1
     折点List2
出口：平台List(不一定存在平台，存在的平台也不一定连续出现)
	
	平台： 1、高点附近存在1次折点的连续高低点
		  2、上记高低点的价格扎堆（不存在线性上升下降的情况）

    高台：平台+高位（大于前后的平台）


处理：
	折点List2里抽取所有高点
	循环读取每个高点
		取得折点List2里相邻的两个高点
		判断相邻的两个高点是不是就是折点List1里下一个高点
		且
		相邻两个高点的价格是不是在对方 90%--110%之间
    	如果是，就是平台，追加到平台List中

		    平台
		    |----int i類型;	// (M，头肩，收缩三角形)
		    |----int 高低; //(高。低)
			|----折点 開始折点; 
			|----折点 結束折点;  
			|----折点 最高价格折点; 
			|----折点 最低价格折点;
		
		


排除干扰计算【去掉不必要的折点】
--------------------------------------
入口：折点List2
     平台List
出口：折点List3

	高点上下折点都无意义
	高台上下折点第一折点有意义	
	低台：头肩顶、M头以外。只留最高低点。

处理：
	再次取得高低点，得到折点List3
	






排除干扰计算【高点充实】
	高台附近。1次折点的连续高低点中，未被计入的也要追加折点
入口：折点List1
	  折点List3
      平台List
出口：平台List
      折点List3

处理：
	循环读取每个折点



高台图形判断:头肩顶、M头
      指定平台是不是高台
入口：平台List
	 折点List3
出口：图形List1

处理：
	循环读取每个折点



图形计算【高台下跌图形】
	 指定高台是不是即将下跌
入口：图形List1
	 折点List3
出口：图形List2
	
处理：
	循环读取每个折点



图形计算【收缩三角形】判断
	【排除干扰后】2次多折点
入口：图形List1
	 折点List3
出口：图形List2

处理：
	循环读取每个折点



图形计算【收缩三角形上行图形】
	指定三角形是不是即将上行
入口：图形List
     折点List3
     平台List
出口：图形List2

处理：
	循环读取每个折点



图形计算【收缩三角形下降图形】
	指定三角形是不是即将下降
入口：图形List
     折点List3
     平台List
出口：图形List2

处理：
	循环读取每个折点



图形计算【低台上行图形】
	指定高台是不是即将上行
入口：图形List
     折点List3
     平台List
出口：图形List2

处理：
	循环读取每个折点

